@use 'sass:math';
@use 'sass:map';
@use 'sass:list';
@use 'breakpoints' as *;

$default-min-bp: map.get($breakpoints, list.nth(map.keys($breakpoints), 1));
$default-max-bp: map.get($breakpoints, list.nth(map.keys($breakpoints), -1));

@function round($number, $decimals: 0) {
  $n: 1;
  @if $decimals > 0 {
    @for $i from 1 through $decimals {
      $n: $n * 10;
    }
  }
  @return math.div(math.round($number * $n), $n);
}

@function px-to-rem($px) {
  $rems: math.div($px, 16px) * 1rem;
  @return $rems;
}

@function fluid(
  $min-size,
  $max-size,
  $min-breakpoint: $default-min-bp,
  $max-breakpoint: $default-max-bp,
  $unit: vw
) {
  @if ($min-size == $max-size) {
    @return round(px-to-rem($min-size), 3);
  }

  $slope: math.div($max-size - $min-size, $max-breakpoint - $min-breakpoint);
  $slope-to-unit: round($slope * 100, 3);
  $intercept-rem: round(px-to-rem($min-size - $slope * $min-breakpoint), 3);
  $min-size-rem: round(px-to-rem($min-size), 3);
  $max-size-rem: round(px-to-rem($max-size), 3);
  @return clamp(#{$min-size-rem}, #{$slope-to-unit}#{$unit} + #{$intercept-rem}, #{$max-size-rem});
}
